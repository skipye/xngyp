@model ModelProject.SCostModel
@{
    Layout = null;
}
@Html.Action("_Meta", "Home")
<nav class="breadcrumb">
    <i class="Hui-iconfont">&#xe67f;</i>首页<span class="c-gray en">&gt;</span>财务管理<span class="c-gray en">&gt;</span>家具成本控制
    <a class="btn btn-success radius r" style="line-height:1.6em;margin-top:3px" href="javascript:location.replace(location.href);" title="刷新"><i class="Hui-iconfont">&#xe68f;</i></a>
</nav>
<div class="page-container">
    <div class="text-c">
        <span class="select-box inline">
            @Html.DropDownListFor(k => k.ProductSNId, Model.XLDroList, new { @class = "select", @style = "width:150px", })
        </span>
        <span class="select-box inline">
            @Html.DropDownListFor(k => k.WoodId, Model.MCDroList, new { @class = "select", @style = "width:150px", })
        </span>
        <button id="btnSearch" class="btn btn-success" type="submit"><i class="Hui-iconfont">&#xe665;</i>搜索</button>
    </div>
	<div class="cl pd-5 bg-1 bk-gray mt-20">
		<a href="javascript:void(0);" onclick="del(this, '0')" class="btn btn-danger radius" data-url="@Url.Action("Delete","DeleteF")"><i class="Hui-iconfont">&#xe6e2;</i>批量删除</a>
		<a href="javascript:void(0);" onclick="addwindow('添加成本', '/Cost/AddF', '800', '600')" class="btn btn-primary radius"><i class="Hui-iconfont">&#xe600;</i>添加成本</a>
		@*<a href="@Url.Action("AddFCost","Cost")" class="btn btn-primary radius"><i class="Hui-iconfont">&#xe600;</i>成本</a>*@
		<a href="javascript:void(0);" onclick="toExcelout()" class="btn btn-warning-outline radius"><i class="Hui-iconfont">&#xe644;</i>导出表格</a>
	</div>
    <div class="mt-20 checkmodel">
        @*@Html.Action("PageList","Article")*@
        <table class="table table-border table-bordered table-bg table-hover table-sort">
            <thead>
                <tr class="text-l">
                    <th width="25"><input type="checkbox" name="" value=""></th>
                    <th>系列</th>
                    <th>产品(ID)</th>
                    <th>材质(ID)</th>
                    <th>材积</th>
                    <th>木材成本(元)</th>
                    <th>辅料成本(元)</th>
                    <th>开料成本</th>
                    <th>木工前段</th>
                    <th>雕花成本</th>
                    <th>木工后段</th>
                    <th>刮磨成本</th>
                    <th>油漆成本</th>
                    <th>人工成本(元)</th>
                    <th>木材费用(元)</th>
                    <th>人工费用(元)</th>
                    <th>总成本(元)</th>
                    <th>出厂价(元)</th>
                    <th>创建时间</th>
                    <th>操作</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@Html.Action("_Footer", "Home")
<!--请在下方写此页面业务相关的脚本-->
<script type="text/javascript" src="~/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="~/js/ajaxScript.js?v=3"></script>
<script type="text/javascript">

    var param = {};
    $(function () { search(param); });
    $("#btnSearch").click(function () {
        //搜索条件
        var ProductSNId = $("#ProductSNId").val().trim();
        var WoodId = $("#WoodId").val().trim();
        //搜索
        param["WoodId"] = WoodId;
        param["ProductSNId"] = ProductSNId;
        //初始化，然后绑定
        $('.table-sort').DataTable().destroy();
        search(param);
    });

    function search(param) {
        $('.table-sort').dataTable({
            "aaSorting": [[1, "desc"]],//默认第几个排序
            "bStateSave": true,//状态保存
            "ajax": function (data, callback, settings) {
                ajaxRequest("post", "/Cost/FPageList", param, function (result) {
                    //封装返回数据
                    var returnData = {};
                    returnData.data = result;
                    callback(returnData);
                });
            },
            "columnDefs": [//对table格式的定义（表格的列从0开始）
                {
                    targets: 0,
                    orderable: false,
                    render: function (data, type, row) {
                        return '<input type="checkbox" value="' + row.Id + '" >';
                    }
                }, {
                    targets: 19,
                    render: function (data, type, row) {
                        var StrCheck = "";
                            StrCheck = 
                                '<a href="javascript:void(0);" style="text-decoration:none" class="ml-10" onclick="editwindow(\'成本编辑\',\'/Cost/AddF\', \'' + row.Id + '\', \'800\', \'600\')" title="成本编辑"><i class="Hui-iconfont">&#xe6df;</i></a>' +
                                '<a href="javascript:void(0);" style="text-decoration:none" class="ml-10" onClick="del(this,\'' + row.Id + '\')" data-url=\'/Cost/DeleteF\' title="删除"><i class="Hui-iconfont f-14">&#xe6e2;</i></a>';
                        
                        return StrCheck;
                    }
                }
            ],
            "columns": [//返回的json数据在这里填充，注意一定要与上面的<th>数量对应，否则排版出现扭曲
                { "data": "Id" },
                { "data": "ProductSN", "className": "text-overflow" },
                {
                    "data": "ProductName", "className": "text-overflow", "render": function (data,type, row) {
                        return data +"("+row.ProductId+")" ;
                    }},
                {
                    "data": "WoodName", "className": "text-overflow", "render": function (data, type, row) {
                        return data + "(" + row.WoodId + ")";
					}
				},
				{ "data": "Volume", "defaultContent": "" },
                { "data": "MCPrice", "defaultContent": "","className": "c-primary" },
                { "data": "FLPrice", "defaultContent": "","className": "c-primary" },
                { "data": "KLPrice", "defaultContent": "" },
                { "data": "MGQPrice", "defaultContent": "" },
                { "data": "DHPrice", "defaultContent": "" },
                { "data": "MGHPrice", "defaultContent": "" },
                { "data": "GMPrice", "defaultContent": "" },
                { "data": "YQPrice", "defaultContent": "" },
                { "data": "PersonPrice", "defaultContent": "", "className": "c-primary" },
                {"data": "MCFY", "defaultContent": "", "className": "c-primary"},
				{"data": "RGFY", "defaultContent": "", "className": "c-primary"},
                { "data": "CostCprice", "defaultContent": "","className": "c-red"  },
                { "data": "CCprice", "defaultContent": "","className": "c-green"  },
                {
                    "data": "CreateTime", "render": function (data) {
                        var NewTime = parseInt(data.replace(/\D/igm, ""));
                        return formatDateTime(NewTime);
                    }
                },

            ]
        });
    };
	function toExcelout() {
        var ProductSNId = $("#ProductSNId").val().trim();
        var WoodId = $("#WoodId").val().trim();
        window.location.href = "/Cost/ToFExcelOut?ProductSNId=" + ProductSNId + '&WoodId=' + WoodId;
        //$.post(ExcelUrl, {}, function (d) { });
    };

</script> 